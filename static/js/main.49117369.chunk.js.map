{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","defaultProps","Context","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","marginLeft","float","color","marginTop","bind","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","PropsTypes","PropTypes","string","isRequired","onChnage","func","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","Test","title","body","fetch","then","response","json","console","log","EditContact","updateContact","match","params","Axios","put","App","exact","path","component","About","NotFound","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49117369.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <span className=\"fas fa-home\">Home</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <span className=\"fas fa-plus\">Add</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <span className=\"fas fa-question\">About</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component, createContext } from \"react\";\r\n// import uuid from \"react-uuid\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    // contacts:[{\r\n    //   id: uuid(),\r\n    //   name: \"Mahesh Soni\",\r\n    //   email: \"sms@gmail.com\",\r\n    //   phone: \"8980829961\",\r\n    // },\r\n    // {\r\n    //   id: uuid(),\r\n    //   name: \"Dhananjay Soneji\",\r\n    //   email: \"dhanan@gmail.com\",\r\n    //   phone: \"6358698574\",\r\n    // },\r\n    // {\r\n    //   id: uuid(),\r\n    //   name: \"Helly Shah\",\r\n    //   email: \"helly@gmail.com\",\r\n    //   phone: \"8658698574\",\r\n    // },\r\n    // {\r\n    //   id: uuid(),\r\n    //   name: \"Anjali Sikarwar\",\r\n    //   email: \"anj@gmail.com\",\r\n    //   phone: \"76854956581\",\r\n    // },\r\n    // {\r\n    //   id: uuid(),\r\n    //   name: \"Priya Samanta\",\r\n    //   email: \"priya@gmail.com\",\r\n    //   phone: \"96854956581\",\r\n    // },];\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  // componentDidMount() {\r\n  //   axios.get(\"http://jsonplaceholder.typicode.com/users\").then((res) =>\r\n  //     this.setState({\r\n  //       contacts: res.data,\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  static propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    // deleteClickHandler: PropTypes.func.isRequired,\r\n  };\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   // this.props.deleteClickHandler();\r\n  //   // dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n\r\n  //   axios\r\n  //     .delete(`http://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\", marginLeft: \"7px\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"red\",\r\n                    marginTop: \"5px\",\r\n                  }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                      marginTop: \"5px\",\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Contact.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   email: PropTypes.string.isRequired,\r\n//   phone: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // constructor(){\r\n  //     super();\r\n  //     this.state = {\r\n  //         contacts: [\r\n  //             {\r\n  //                 name: 'Mahesh Soni',\r\n  //                 email: 'sms@gmail.com',\r\n  //                 phome: '8980829961'\r\n  //             }\r\n  //         ]\r\n  //     }\r\n  // }\r\n\r\n  //   deleteContact = (id) => {\r\n  //     const { contacts } = this.state;\r\n  //     const newContacts = contacts.filter((contact) => contact.id !== id);\r\n  //     this.setState({\r\n  //       contacts: newContacts,\r\n  //     });\r\n  //   };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  //   deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classname\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\" form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.PropsTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChnage: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"react-uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.nameInput = React.createRef();\r\n  //   this.emailInput = React.createRef();\r\n  //   this.phoneInput = React.createRef();\r\n  // }\r\n\r\n  // static defaultProps = {\r\n  //   name: \"Your name goes here\",\r\n  //   email: \"Give me your email here\",\r\n  //   phone: \"right-down your phone number\",\r\n  // };\r\n\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"http://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //clearing the state and textFields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n\r\n    // console.log(this.state);\r\n    // const contact = {\r\n    //   name: this.nameInput.current.value,\r\n    //   email: this.emailInput.current.value,\r\n    //   phone: this.phoneInput.current.value,\r\n    // };\r\n    // console.log(contact);\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Name...\"\r\n                      name=\"name\"\r\n                      onChange={this.onChange}\r\n                      // defaultValue={name}\r\n                      // ref={this.nameInput}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Email...\"\r\n                      name=\"email\"\r\n                      onChange={this.onChange}\r\n                      // defaultValue={email}\r\n                      // ref={this.emailInput}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      name=\"phone\"\r\n                      onChange={this.onChange}\r\n                      // defaultValue={phone}\r\n                      // ref={this.phoneInput}\r\n                    />\r\n                  </div> */}\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-light btn-block\"\r\n                    value=\"Add Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <br />\r\n      <p className=\"lead\">Simple app to manage contacts </p>\r\n      <br />\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {\" \"}\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <br />\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body,\r\n        });\r\n        // console.log(\"ComponentDidMount\");\r\n      });\r\n  }\r\n  //   componentWillMount() {\r\n  //     console.log(\"ComponentWillMount\");\r\n  //   }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <br />\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"react-uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n// import axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //clearing the state and textFields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-light btn-block\"\r\n                    value=\"Update Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; //it's not working with github pages so do the below one\n// import { HashRouter as Router, Route, Switch } from \"react-router-dom\"; // use it for GitHub Paged deploy\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        {/* <Router basename={process.env.PUBLIC_URL}> do this to work with browser router*/}\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            {/* <Contact name=\"Mahesh Soni\" email=\"sms@gmail.com\" phone=\"52456585\" />\n        <Contact name=\"Rahul Mishra\" email=\"rm@gmail.com\" phone=\"84854554\" /> */}\n            {/* <AddContact />\n          <Contacts /> */}\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n"],"sourceRoot":""}